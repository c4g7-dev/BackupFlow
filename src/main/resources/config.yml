# BackupFlow Configuration

s3:
  endpoint: "play.minio.local:9000"
  secure: true
  accessKey: "ACCESS_KEY"
  secretKey: "SECRET_KEY"
  bucket: "backups"
  rootDir: "FlowStack/BackupFlow"

backup:
  include:
    # Use '*' in worlds list (or leave all include fields empty) to auto-detect all worlds (folders containing level.dat)
    # If ALL of: worlds list empty, extraPaths empty, and plugins/configs not explicitly set -> implicit '*'
    worlds: ["*"]  # Auto-detect all worlds with level.dat
    plugins: true      # Include entire plugins directory (with smart exclusions)
    configs: true      # Include all server configs, permissions, and plugin configs
    extraPaths: [
      "logs",          # Server logs (useful for debugging)
      "permissions.yml", "ops.json", "whitelist.json", "banned-players.json", "banned-ips.json",
      "eula.txt", "server.properties", 
      "bukkit.yml", "spigot.yml", "paper-global.yml", "paper-world-defaults.yml",
      "purpur.yml", "pufferfish.yml", "airplane.yml",  # Alternative server configs
      "config"         # Additional config directory if exists
    ]
  # Smart exclusions - only exclude cache, temp, and log files that can be regenerated
  exclude:
    patterns:
      # Minecraft server cache and temp files
      - "cache/**"
      - "logs/*.log.gz"        # Keep recent logs, exclude compressed old ones
      - "world/session.lock"
      - "**/uid.dat"
      - "**/session.lock"
      # Plugin caches and temp files that can be regenerated
      - "plugins/**/cache/**"
      - "plugins/**/temp/**"
      - "plugins/**/tmp/**"
      - "plugins/**/logs/*.log.gz"  # Exclude old compressed plugin logs
      - "**/temp/**"
      - "**/tmp/**"
      # BackupFlow's own temp directory (prevent recursive backup)
      - "plugins/BackupFlow/work/**"
      # Common large regeneratable files
      - "**/dynmap/web/tiles/**"    # DynMap tiles (regeneratable)
      - "**/BlueMap/web/data/**"    # BlueMap data (regeneratable)
      - "**/PlotSquared/schematics/**" # Large schematic files (optional)
      # Version control and IDE files
      - ".git/**"
      - ".gitignore"
      - ".idea/**"
      - "*.iml"
    maxFileSizeMB: 100           # Skip individual files larger than 100MB (configurable)
    maxDirectorySizeMB: 2000     # Skip directories larger than 2GB (configurable)
  compression: zip   # zip | gz (tar.gz) | none
  chunkSizeMB: 32    # reserved for future incremental diff logic
  retention:
    enableLifecycle: false   # if true rely on bucket lifecycle rules
    maxLocalEntries: 10      # how many local manifest records to keep
  hardTimeoutSeconds: 600    # watchdog hard timeout for a single full backup (0=disable)
  phaseStaleSeconds: 300     # warn if a phase (e.g., COLLECT) exceeds this without progress (0=disable)
  skipUnchanged: true        # skip backup if no files changed since last backup (based on content hash)
  performance:
    compressionLevel: 6      # 0-9: 0=no compression, 6=default, 9=max compression (slower)
    uploadPartSizeMB: 64     # S3 multipart upload part size in MB (larger = faster for big files)
    uploadBufferSizeMB: 8    # Upload buffer size in MB (larger = faster, more memory)
    parallelCompress: false  # Enable parallel file processing during compression (experimental)
    # Advanced upload optimization
    connectionPoolSize: 10   # HTTP connection pool size for S3 client
    readTimeoutSeconds: 300  # Socket read timeout for uploads
    writeTimeoutSeconds: 300 # Socket write timeout for uploads
    maxConcurrentUploads: 3  # For future parallel upload implementation
  schedule:
    enabled: true
    intervalMinutes: 60     # run every X minutes
    jitterSeconds: 30       # random jitter to avoid sync storms in clusters

restore:
  allowDirectDownload: true
  tempDir: "plugins/BackupFlow/work/tmp"
  restoreDir: "restores"

manifest:
  storeInBucket: true
  prefix: "manifests"  # stored under rootDir/manifests/<name>.json

integrity:
  hashes: true   # if true include per-file SHA-256 hashes in manifest for verification

logging:
  verbose: false

metrics:
  enabled: true

# List existing backups at startup (counts only)
autoListOnStart: true

# Toggle colored prefix output (set false for plain logs/console)
color:
  enabled: true

# Cache backup timestamp list for tab completion (seconds, 0=disable cache)
timestampCacheSeconds: 60
